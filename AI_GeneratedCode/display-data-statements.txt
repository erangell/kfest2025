10 REM DATA STATEMENT DISPLAY PROGRAM
20 REM COPYRIGHT 2025
30 REM DISPLAYS DATA STATEMENTS WITH LEVEL-BASED INDENTATION
40 REM TRUNCATES TEXT TO FIT 80 COLUMN SCREEN

100 REM INITIALIZE VARIABLES
110 MAX_DISPLAY = 20: REM NUMBER OF ITEMS TO DISPLAY (CHANGE AS NEEDED)
120 INDENT_SPACES = 2: REM SPACES PER INDENTATION LEVEL
130 SCREEN_WIDTH = 80: REM SCREEN WIDTH
140 ITEM_COUNT = 0: REM COUNTER FOR DISPLAYED ITEMS

200 REM CLEAR SCREEN AND SET UP DISPLAY
210 HOME: REM CLEAR SCREEN
220 PRINT "INDENTED DATA DISPLAY (MAX ";MAX_DISPLAY;" ITEMS)"
230 PRINT "=========================================="
240 PRINT ""

300 REM MAIN DISPLAY LOOP
310 READ LEVEL, TEXT$
320 ITEM_COUNT = ITEM_COUNT + 1
330 INDENT = LEVEL * INDENT_SPACES: REM CALCULATE INDENTATION
340 GOSUB 500: REM DISPLAY THIS ITEM
350 IF ITEM_COUNT >= MAX_DISPLAY THEN GOTO 700: REM CHECK IF REACHED DISPLAY LIMIT
360 GOTO 300: REM CONTINUE READING DATA

500 REM SUBROUTINE TO DISPLAY ONE ITEM
510 REM CALCULATE REMAINING SPACE AFTER INDENTATION
520 AVAIL_WIDTH = SCREEN_WIDTH - INDENT
530 IF LEN(TEXT$) > AVAIL_WIDTH THEN TEXT$ = LEFT$(TEXT$, AVAIL_WIDTH): REM TRUNCATE IF NEEDED
540 SPACES$ = ""
550 IF INDENT > 0 THEN FOR I = 1 TO INDENT: SPACES$ = SPACES$ + " ": NEXT I
560 PRINT SPACES$;TEXT$
570 RETURN

700 REM END OF PROGRAM
710 PRINT ""
720 PRINT "DISPLAYED ";ITEM_COUNT;" ITEMS."
730 END

800 REM DATA STATEMENTS WILL BE APPENDED HERE
810 REM FORMAT: DATA LEVEL,"TEXT"
820 DATA 1,"Level 1 Item"
830 DATA 2,"Level 2 Item"
840 DATA 3,"Level 3 Item"
850 DATA 2,"Another Level 2 Item"
860 DATA 1,"Second Level 1 Item"
870 DATA 2,"Child of Second Level 1 Item with a very long text that will need to be truncated because it exceeds the available width on an 80-column display"
880 DATA 1,"Third Level 1 Item"
890 DATA 2,"Final Level 2 Item"
